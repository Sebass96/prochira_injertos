---
title: "Estudio del injerto intermedio sobre el crecimiento y productividad del mango (Mangífera indica L.) var.Kent.en el Valle de San Lorenzo"
author: Sebastian Casas; Flavio Lozano-Isla
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
    output-file: "ESM_1"
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  echo: true
---

# Setup

Instalar la version en desarrollo

```{r}
#| eval: false

if (!require("remotes"))
  install.packages("remotes")
remotes::install_github("flavjack/inti")
```



```{r}
#| label:  setup

source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(lmerTest)

# library(rstatix)
# library(corrplot)
# library(dlookr)
# library(FSA)


session_info()
```

# Importar datos

```{r}
url <- "https://docs.google.com/spreadsheets/d/1E_cUmiRFoPLGAj7AQC6HZBD6hXtqzg2UHPvtWr2QR_U/edit#gid=2112492836"

gs <- url %>% 
  as_sheets_id()

ley <- gs %>% 
  range_read("leyenda") %>% 
  rename(tratamientos = TRATAM) %>% 
  rename_with(~ tolower(.))

rdt <- gs %>% 
  range_read("db") %>% 
  merge(., ley) %>% 
  dplyr::select(year = "año", n, tratamientos,n_trat:yema, everything()) %>% 
  rename(treat = tratamientos
         , n_treat = n_trat
         , block = bloque
         , n_plant = n_planta
         , height = alt_planta
         , n_fruits = n_frutos
         , flowering = per_floracion
         , sproud = per_brote
         , scion = yema
         , stock = patron
         , edge = puente
         ) %>% 
  dplyr::arrange(year, n, treat) %>% 
  mutate(across(year:n_plant, ~ as.factor(.))) 

str(rdt)
  
fru <-  gs %>% 
  range_read("db_frutos") %>% 
  merge(., ley, ) %>% 
  dplyr::select(year = "año", n, tratamientos,n_trat:yema, everything()) %>% 
  rename(treat = tratamientos
         , n_treat = n_trat
         , block = bloque
         , n_plant = n_planta
         , weigth = peso
         , long = largo
         , n_fruits = n_frutos
         , diameter_1 = diametro_1
         , diameter_2 = diametro_2
         , sample = muestra
         , scion = yema
         , stock = patron
         , edge = puente
         ) %>% 
  dplyr::arrange(year, n, treat) %>% 
  mutate(diameter_average = (diameter_1 + diameter_2)/2) %>% 
  mutate(across(year:sample, ~ as.factor(.)))

glimpse(fru)
```

# Data summary

```{r}
sm <- rdt %>% 
  group_by(year, treat) %>% 
  summarise(across(height:sproud, ~ sum(!is.na(.))))

sm

sm <- fru %>% 
  group_by(year, treat) %>% 
  summarise(across(weigth:diameter_average, ~ sum(!is.na(.))))

sm
```

# Objetivos

- Determinar las caracteristicas agronómicas en la relación patron-injerto intermedio para las variables alt_planta	n_frutos	per_floracion, per_brotes

- Evaluar la calidad del fruto en la relación patron-injerto intermedio


# Objetivo. 1

Determinar las caracteristicas agronómicas en la relación patron-injerto intermedio para las variables alt_planta	n_frutos	per_floracion, per_brotes

## Height

```{r}
trait <- "height"

lmm <- paste({{trait}}, "~ 1 + (1|block) + stock*edge") %>% as.formula()

lmd <- paste({{trait}}, "~ block + stock*edge") %>% as.formula()

rmout <- rdt %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ edge|stock) %>%
  cld(Letters = letters, reversed = T) %>%
  mutate(across(.group, trimws)) %>% 
  rename(group = ".group")

p1a <- mc %>% 
  plot_smr(x = "stock"
           , y = "emmean"
           , group = "edge"
           , sig = "group"
           , error = "SE"
           , color = T
           , ylab = "Plant height (m)"
           , ylimits = c(0, 6, 2)
           , 
           )

```

## Sproud

```{r}
trait <- "sproud"

lmm <- paste({{trait}}, "~ 1 + (1|block) + stock*edge") %>% as.formula()

lmd <- paste({{trait}}, "~ block + stock*edge") %>% as.formula()

rmout <- rdt %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ edge|stock) %>%
  cld(Letters = letters, reversed = T) %>%
  mutate(across(.group, trimws)) %>% 
  rename(group = ".group")

p1b <- mc %>% 
  plot_smr(x = "stock"
           , y = "emmean"
           , group = "edge"
           , sig = "group"
           , error = "SE"
           , color = T
           , ylab = "Sproud ('%')"
           , ylimits = c(0, 100, 20)
           )
```

## n_fruits

```{r}
trait <- "n_fruits"

lmm <- paste({{trait}}, "~ 1 + (1|block) + year + stock*edge + (1 + year|treat)") %>% as.formula()

lmd <- paste({{trait}}, "~ block + year + stock*edge") %>% as.formula()

rmout <- rdt %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ year|edge|stock) %>%
  cld(Letters = letters, reversed = T) %>%
  mutate(across(.group, trimws)) %>% 
  rename(group = ".group")

p1c <- mc %>% 
  plot_smr(type = "bar"
           , x = "year"
           , y = "emmean"
           , group = "edge"
           , sig = "group"
           , error = "SE"
           , color = T
           , ylab = "N^{o} fruits"
           , ylimits = c(0, 320, 60)
           ) +
  facet_wrap(. ~ stock, nrow = 2)
```

## Flowering

```{r}
trait <- "flowering"

lmm <- paste({{trait}}, "~ 1 + (1|block) + year + stock*edge + (1 + year|treat)") %>% as.formula()

lmd <- paste({{trait}}, "~ block + year + stock*edge") %>% as.formula()

rmout <- rdt %>% 
  remove_outliers(formula = lmm
                  , drop_na = T, plot_diag = T)

rmout$diagplot

rmout$outliers

model <- rmout$data$clean %>% 
  aov(formula = lmd, .)

anova(model)

mc <- emmeans(model, ~ year|edge|stock) %>%
  cld(Letters = letters, reversed = T) %>%
  mutate(across(.group, trimws)) %>% 
  rename(group = ".group")

p1d <- mc %>% 
  plot_smr(type = "bar"
           , x = "year"
           , y = "emmean"
           , group = "edge"
           , sig = "group"
           , error = "SE"
           , color = T
           , ylab = "Flowering ('%')"
           , ylimits = c(0, 120, 20)
           ) +
  facet_wrap(. ~ stock, nrow = 2)
```

## Figura 1

```{r}
legend <- cowplot::get_plot_component(p1a, 'guide-box-top', return_all = TRUE)

p1 <- list(p1a + theme(legend.position="none")
           , p1b + theme(legend.position="none")
           , p1c + theme(legend.position="none")
           , p1d + theme(legend.position="none")
           ) %>% 
  plot_grid(plotlist = ., ncol = 2
            , labels = "auto"
            , rel_heights = c(1, 2)
            ) 

plot_grid(legend, p1, ncol = 1, align = 'v', rel_heights = c(0.1, 1)) %>% 
  ggsave2(plot = ., "files/Fig-1.jpg"
         , units = "cm"
         , width = 24
         , height = 16
         )
```

## Multivariate

```{r}
mv <- rdt %>% 
  group_by(stock, edge) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = T))) %>%   
  unite("treat", stock:edge, sep = "-") %>% 
   rename(Treat = treat
         , Height = height
         , Fruits = n_fruits
         , Flowering = flowering
         , Sproud = sproud)
  
pca <- mv %>% 
  PCA(scale.unit = T, quali.sup = 1, graph = F) 


f2a <- plot.PCA(x = pca, choix = "var"
                , cex=0.8
                )

f2b <- plot.PCA(x = pca, choix = "ind"
                , habillage = 1
                , invisible = c("ind")
                , cex=0.8
                ) 

```

## Figura 2

```{r}
list(f2a, f2b) %>% 
  plot_grid(plotlist = ., ncol = 2, nrow = 1
            , labels = "auto"
            , rel_widths = c(1, 1.5)
            ) %>% 
  ggsave2(plot = ., "files/Fig-2.jpg", units = "cm"
         , width = 25, height = 10)
```

# Correlation

```{r}
cor <- mv %>% 
  dplyr::select(where(is.numeric)) %>% 
  cor(., method ="pearson")

sf1 <- ~ {
  
  corrplot::corrplot(cor, method = "number", type = "upper")
}

list(sf1) %>% 
  plot_grid(plotlist = .) %>% 
  ggsave2(plot = ., "files/FigS1.jpg", units = "cm"
         , width = 15, height = 15)
```




# Obj. 2

- Evaluar la calidad del fruto en la relación patron-injerto intermedio

# Weigth

```{r}
fru %>% 
  identify_outliers(weigth)

fru %>%
  plot_outlier(diagnose_outlier(fru) %>% 
                 filter(variables == "weigth") %>% 
                 select(variables) %>% 
                 unlist())

model <- fru %>% 
  lm(weigth  ~ block + stock*edge, .)

plot_diag(model) %>% 
  plot_grid(plotlist = ., ncol = 2)

fru %>% 
  plot_raw(x = "stock", y = "weigth", group = "edge")

anova(model)

mc <- agricolae::duncan.test(model, trt = c("stock", "edge")) %>% 
  pluck("groups") %>% 
  rownames_to_column("treat")%>% 
  separate(treat, c("stock", "edge"))

p5 <- mc %>% 
  plot_smr(x = "stock"
           , y = "weigth"
           , group = "edge"
           , sig = "groups"
           , ylimits = c(0, 600, 100)
           , ylab = "Fruit weigth (g)"
           , xlab = "Treatment"
           )

p5


```

# Tabla 1

```{r}
sts <- Summarize(weigth  ~ stock*edge, data = fru, digits = 2, na.rm = TRUE)

tb1 <- sts%>% 
  merge(., mc) %>% 
  select(stock, edge, mean, sd, min, max, groups) %>% 
  mutate(treat = paste(stock,"x", edge)) %>% 
   select(treat, everything()) %>% 
  rename(Treat = treat,
         Stock = stock,
         Edge = edge,
         Sig = groups)

# tb1 %>% write_sheet(ss = gs, sheet = "tb1")

#write.table(tb1, file = "tabla1.csv", sep = ";", row.names = F)
  
# tb <- tb1 %>% 
#   kbl(caption = "Statistics",
#       align = "lccrr",
#       col.names = c("Treat", "Stock", "Edge", "mean", "std", "min", "max", "Sig")) %>% 
#   kable_classic(full_width = F, html_font = "Cambria")
# 
# tb

```

# Long

```{r}
fru %>% 
  identify_outliers(long)

model <- fru %>% 
  lm(long  ~ block + stock*edge, .)

plot_diag(model) %>% 
  plot_grid(plotlist = ., ncol = 2)

fru %>% 
  plot_raw(x = "stock", y = "long", group = "edge")

anova(model)

mc <- agricolae::duncan.test(model, trt = c("stock", "edge")) %>% 
  pluck("groups") %>% 
  rownames_to_column("treat")%>% 
  separate(treat, c("stock", "edge"))


p6 <- mc %>% 
  plot_smr(x = "stock"
           , y = "long"
           , group = "edge"
           , sig = "groups"
           , ylimits = c(0, 120, 20)
           , ylab = "Fruit long (mm)"
           , xlab = "Treatment"
           )

p6

```

# Tabla 2

```{r}
sts <- Summarize(long  ~ stock*edge, data = fru, digits = 2, na.rm = TRUE)

tb2 <- sts%>% 
  merge(., mc) %>% 
  select(stock, edge, mean, sd, min, max, groups) %>% 
  mutate(treat = paste(stock,"x", edge)) %>% 
   select(treat, everything()) %>% 
  rename(Treat = treat,
         Stock = stock,
         Edge = edge,
         Sig = groups)

#tb2 %>% write_sheet(ss = gs, sheet = "tb2")

```
 

# Diameter

```{r}
fru %>% 
  identify_outliers(diameter_average)

model <- fru %>% 
  lm(diameter_average ~ stock*edge, .)

plot_diag(model) %>% 
  plot_grid(plotlist = ., ncol = 2)

fru %>% 
  plot_raw(x = "stock", y = "diameter_average", group = "edge")

anova(model)

mc <- agricolae::duncan.test(model, trt = c("stock", "edge")) %>% 
  pluck("groups") %>% 
  rownames_to_column("treat")%>% 
  separate(treat, c("stock", "edge"))

p7 <- mc %>% 
  plot_smr(x = "stock"
           , y = "diameter_average"
           , group = "edge"
           , sig = "groups"
           , ylimits = c(0, 100, 20)
           , ylab = "Fruit diameter (mm)"
           , xlab = "Treatment"
           )

p7

```

# Tabla 3

```{r}
sts <- Summarize(diameter_average ~ stock*edge, data = fru, digits = 2, na.rm = TRUE)

tb3 <- sts%>% 
  merge(., mc) %>% 
  select(stock, edge, mean, sd, min, max, groups) %>% 
  mutate(treat = paste(stock,"x", edge)) %>% 
   select(treat, everything()) %>% 
  rename(Treat = treat,
         Stock = stock,
         Edge = edge,
         Sig = groups)

tb3 %>% write_sheet(ss = gs, sheet = "tb3")

```

# Figura 3

```{r}
list(p5, p6, p7) %>% 
  plot_grid(plotlist = ., ncol = 2
            , labels = "auto"
            ) %>% 
  ggsave(plot = ., "files/Fig-3.jpg", units = "cm"
         , width = 25, height = 18)
```

## Multivariate

```{r}
mv <- fru %>% 
  group_by(treat) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = T))) %>% 
  dplyr::select(!c(diameter_1, diameter_2, n_fruits)) %>% 
   rename(Treat = treat
         , Weight = weigth
         , Length = long
         , Diameter = diameter_average)
  
pca <- mv %>% 
  PCA(scale.unit = T, quali.sup = 1, graph = F) 


f4a <- plot.PCA(x = pca, choix = "var",
                ggoptions = list(size = 15)) +
  theme(axis.title.x = element_text(size = 50),
       axis.title.y = element_text(size = 50),
       axis.text = element_text(size = 50),
       legend.text = element_text(size = 50),
       legend.title = element_text(size = 50),
       plot.title = element_text(size = 50))

f4b <- plot.PCA(x = pca, choix = "ind", habillage = 1,
                ggoptions = list(size = 10)) +
  theme(axis.title.x = element_text(size = 50),
       axis.title.y = element_text(size = 50),
       axis.text = element_text(size = 50),
       legend.text = element_text(size = 30),
       legend.title = element_text(size = 30),
       plot.title = element_text(size = 50))

```

# Correlation

```{r}
mv %>% 
  select(where(is.numeric)) %>% 
  pairs.panels(.
             , pch = 21
             , method = "pearson"
             , stars = T
             , scale = F
             , lm = T
             ) 

M <- cor(mv[,-c(1)], method ="pearson")

f4c <- corrplot(M, method = "number", type = "upper")

```

# Figura 4

```{r}
list(f4a, f4b) %>% 
  plot_grid(plotlist = ., ncol = 2, labels = "auto",
              label_size = 50) %>% 
  ggsave(plot = ., "files/Fig-4.jpg", units = "cm"
         , width = 30, height = 15)
```

